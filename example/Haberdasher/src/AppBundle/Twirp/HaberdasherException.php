<?php
# Generated by protoc-gen-twirp_php, DO NOT EDIT.
# source: haberdasher.proto

namespace AppBundle\Twirp;

use Psr\Http\Message\ResponseInterface;

class HaberdasherException extends \Exception
{
    private $twirpCode;
    private $meta;

    public function __construct($msg, $httpCode, $twirpCode = 'internal', $meta = [])
    {
        parent::__construct($msg, $httpCode);

        $this->twirpCode = $twirpCode;
        $this->meta = $meta;
    }

    public function getTwirpCode(): string
    {
        return $this->twirpCode;
    }

    public function getMeta(): array
    {
        return $this->meta;
    }

    public static function fromResponse(ResponseInterface $response) {
        $data = @json_decode($response->getBody()->getContents(), true);

        if (isset($data['msg'])) {
            $msg = $data['msg'];
        } else {
            $msg = $response->getStatusCode() . ': Unknown server response: ' . $response->getBody()->getContents();
        }

        return new self(
            $msg,
            $response->getStatusCode(),
            isset($data['code']) ? $data['code'] : 'internal',
            isset($data['meta']) ? $data['meta']: []
        );
    }
}
